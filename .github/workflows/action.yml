name: Setup & Deploy AWS

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Setup AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
          node-version: '18'

    - name: Cache node_modules
      id: cache-node_modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node_modules
      with:
        # caching node_modules
        path: node_modules # path for node_modules folder
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - name: Install dependencies
      run: npm install

    - name: Tests
      run: npm run test:action

    - name: Build
      run: npm run build:prod

    - name: Deploy
      if: success()
      run: aws s3 sync ./dist s3://${{secrets.AWS_S3_DEPLOY}} --delete

    - name: Invalidation
      if: success()
      run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/*"

    - name: Check Deployed Content
      if: success()
      run: curl ${{secrets.APP_BASE_URL}} | grep ${{secrets.GREP_CONTENT_TEST}}
